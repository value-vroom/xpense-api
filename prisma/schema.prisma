// database
datasource db {
    provider = "sqlite"
    url      = "file:database.db"
}

// generator
generator client {
    provider             = "prisma-client-py"
    interface            = "sync"
    recursive_type_depth = 5
}

// data models
model User {
    username           String          @id @unique
    email              String          @unique
    full_name          String
    hashed_password    String
    profile_image_name String
    profile_image      Image           @relation(fields: [profile_image_name], references: [name])
    GroupMember        GroupMember[]
    Expense            Expense[]
    ExpenseMember      ExpenseMember[]
    Transaction        Transaction[]
}

model Token {
    access_token String @id
    token_type   String
}

model TokenData {
    username String @id
}

model Image {
    name String @id
    data Bytes
    User User[]
}

model Group {
    id            Int           @id @default(autoincrement())
    name          String
    description   String
    currency_code String
    currency      Currency      @relation(fields: [currency_code], references: [code])
    GroupMember   GroupMember[]
    Expense       Expense[]
    Transaction   Transaction[]
}

model GroupMember {
    group    Group   @relation(fields: [group_id], references: [id])
    user     User    @relation(fields: [username], references: [username])
    group_id Int
    username String
    is_owner Boolean @default(false)

    @@id([group_id, username])
}

model Currency {
    id     Int     @id @default(autoincrement())
    code   String  @unique // ISO 4217
    name   String
    symbol String
    Group  Group[]
}

model Expense {
    id              Int
    name            String
    description     String
    amount_in_cents Int
    group           Group           @relation(fields: [group_id], references: [id])
    group_id        Int
    payer           User            @relation(fields: [payer_username], references: [username])
    payer_username  String
    date            DateTime        @default(now())
    ExpenseMember   ExpenseMember[]

    @@id([id, group_id])
}

model ExpenseMember {
    expense_id      Int
    group_id        Int
    username        String
    amount_in_cents Int
    expense         Expense @relation(fields: [expense_id, group_id], references: [id, group_id])
    user            User    @relation(fields: [username], references: [username])

    @@id([expense_id, group_id, username])
}

model Transaction {
    id              Int
    group_id        Int
    username        String
    amount_in_cents Int
    date            DateTime @default(now())
    user            User     @relation(fields: [username], references: [username])
    group           Group    @relation(fields: [group_id], references: [id])

    @@id([id, group_id])
}
